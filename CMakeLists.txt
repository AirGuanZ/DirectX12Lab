CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(DIRECTX-12-LAB)

OPTION(D3D12_LAB_WITH_AGZ_UTILS "build AGZUtils from source" ON)

########## agz utils

IF(D3D12_LAB_WITH_AGZ_UTILS)
	ADD_SUBDIRECTORY(lib/agz-utils)
ENDIF()

########## d3d12

FILE(GLOB_RECURSE D3D12_SRC
		"${PROJECT_SOURCE_DIR}/src/*.cpp"
		"${PROJECT_SOURCE_DIR}/include/*.h")

ADD_LIBRARY(D3D12Lab STATIC ${D3D12_SRC})

FOREACH(_SRC IN ITEMS ${D3D12_SRC})
    GET_FILENAME_COMPONENT(D3D12_SRC "${_SRC}" PATH)
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/include/agz/d3d12" "include" _GRP_PATH "${D3D12_SRC}")
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/src" "src" _GRP_PATH "${_GRP_PATH}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

IF(MSVC)
	TARGET_COMPILE_DEFINITIONS(D3D12Lab PUBLIC _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING)
ENDIF()

SET_PROPERTY(TARGET D3D12Lab PROPERTY CXX_STANDARD 17)
SET_PROPERTY(TARGET D3D12Lab PROPERTY CXX_STANDARD_REQUIRED ON)

TARGET_INCLUDE_DIRECTORIES(D3D12Lab PUBLIC "${PROJECT_SOURCE_DIR}/include/")
TARGET_INCLUDE_DIRECTORIES(D3D12Lab PUBLIC "${PROJECT_SOURCE_DIR}/lib/d3dx12/")
TARGET_LINK_LIBRARIES(D3D12Lab PUBLIC
    AGZUtils
    d3d12.lib
    dxgi.lib
    d3dcompiler.lib
    dxguid.lib)

########## samples

ADD_SUBDIRECTORY(samples/00_init)
ADD_SUBDIRECTORY(samples/01_triangle)
ADD_SUBDIRECTORY(samples/02_mesh)
ADD_SUBDIRECTORY(samples/03_texture)
